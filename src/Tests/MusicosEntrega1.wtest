import Albumes.*
import Cancion.*
import Exceptions.*
import Fender.*
import Gibson.*
import MusicoDeGrupo.*
import LaTrastienda.*
import VocalistaPopular.*
import LuisAlberto.*
import LunaPark.*
import Musico.*
import Pdpalooza.*
import Pimpinela.*
import Presentacion.*
import Solista.*

describe "Tests de la entrega 1"{ 
	
	var costoLuisAlbertoTrastienda
	var costoJoaquinTrastienda
	var costoLuciaTrastienda
	var costoLuisAlberto
	var costoJoaquin
	var costoLucia
	var cisne
	var laFamilia
	var presentacionLunaPark
	var presentacionLaTrastienda
	var almaDeDiamante
	var crisantemo
	var especialLaFamilia
	var paraLosArboles
	var justCrisantemo
	var lucia
	var joaquin
	
	fixture{		
		laFamilia = new Cancion(264, "Quiero brindar por mi gente sencilla, por el amor brindo por la familia","La Familia",joaquin)
		cisne = new Cancion(312, "Hoy el viento se abrio quedo vacio el aire una vez mas y el manantial broto y nadie esta aqui y puedo ver que solo estallan las hojas al brillar","Cisne",luisAlberto)
		almaDeDiamante = new Cancion(216, "Ven a mi con tu dulce luz alma de diamante. Y aunque el sol se nuble despues sos alma de diamante. Cielo o piel silencio o verdad sos alma de diamante. Por eso ven asi con la humanidad alma de diamante","Alma De Diamante",luisAlberto)
		crisantemo = new Cancion(175, "Tocame junto a esta pared, yo quede por aqui cuando no hubo mas luz, quiero mirar a traves de mi piel. Crisantemo, que se abrio, encuentra el camino hacia el cielo","Crisantemo",luisAlberto)
		especialLaFamilia = new Album("Especial La Familia",#{laFamilia},new Date(17,6,1992),100000,89000)
		paraLosArboles = new Album("Para los arboles",#{cisne,almaDeDiamante},new Date(31,3,2003),50000,49000)
		justCrisantemo = new Album("Just Crisantemo",#{crisantemo},new Date(5,12,2007),28000,27500)
		lucia = new Lucia(70,pimpinela,#{},"familia")
		joaquin = new Joaquin(5,#{especialLaFamilia},20,pimpinela)
		presentacionLunaPark = new Presentacion(2017,04,20,lunaPark,#{luisAlberto,joaquin,lucia})
		presentacionLaTrastienda = new Presentacion(2017,11,15,laTrastienda,#{luisAlberto,joaquin,lucia})
		luisAlberto.agregarAlbum(paraLosArboles)
		luisAlberto.agregarAlbum(justCrisantemo)
		costoLucia = lucia.costoDeUnaPresentacion(presentacionLunaPark)
		costoJoaquin = joaquin.costoDeUnaPresentacion(presentacionLunaPark)
		costoLuisAlberto = luisAlberto.costoDeUnaPresentacion(presentacionLunaPark)
		costoLuciaTrastienda = lucia.costoDeUnaPresentacion(presentacionLaTrastienda)
		costoJoaquinTrastienda = joaquin.costoDeUnaPresentacion(presentacionLaTrastienda)
		costoLuisAlbertoTrastienda = luisAlberto.costoDeUnaPresentacion(presentacionLaTrastienda)

	}

	//Entrega 1

	test "Joaquin canta en Pimpinela y su habilidad es 25" {
		assert.equals(25,joaquin.habilidad())
	}
	
	test "Joaquin canta en Pimpinela, lanza su carrera solista y su habilidad es 20" {
		joaquin.dejarGrupo()
		assert.equals(20, joaquin.habilidad())
	}
		
	test "Lucia canta en Pimpinela, lanza su carrera solista y su habilidad es 70"{
		lucia.dejarGrupo()
		assert.equals(70,lucia.habilidad())
	}
	test "Luis Alberto toca con la Fender y su habilidad es 80" {
		assert.equals(80,luisAlberto.habilidad())
	}
	
	test "Luis Albero toca con la Gibson sana y su habilidad es 100" {
		luisAlberto.guitarra(gibson)
		assert.equals(100, luisAlberto.habilidad())
	}
	
	test "Luis Alberto toca con la Gibson que no esta sana y su habilidad es 40" {
		luisAlberto.guitarra(gibson)
		luisAlberto.maltratarSuGuitarra()
		assert.equals(40, luisAlberto.habilidad())
	}
	
	test "Joaquin no interpreta bien La Familia" {
		assert.notThat(joaquin.ejecutaBienUnaCancion(laFamilia))
	}
	
	test "Joaquin interpreta bien Cisne" {
		assert.that(joaquin.ejecutaBienUnaCancion(cisne))
	}
	
	test "Lucia interpreta bien La Familia" {
		assert.that(lucia.ejecutaBienUnaCancion(laFamilia))
	}
	
	test "Lucia no interpreta bien Cisne" {
		assert.notThat(lucia.ejecutaBienUnaCancion(cisne))
	}
	
	test "Luis Alberto interpreta bien Cisne" {
		assert.that(luisAlberto.ejecutaBienUnaCancion(cisne))
	}
	
	test "Joaquin cobra 50 por Luna Park" {
		assert.equals(50,joaquin.costoDeUnaPresentacion(presentacionLunaPark)) 
	}
	
	test "Joaquin cobra 100 por actuar solo en la Trastienda" {
		presentacionLaTrastienda = new Presentacion(2017,11,15,laTrastienda,#{joaquin})
		assert.equals(100, joaquin.costoDeUnaPresentacion(presentacionLaTrastienda) )
	}
	
	test "Capacidad de la Trastienda el 8/8/2017 es 400" {
		var fecha = new Date() 
		fecha.initialize(08,08,2017) 
    		assert.equals(400, laTrastienda.capacidad(fecha)) 
	}
	
	test "Lucia cobra 500 por la presentacion en el Luna Park" {
		assert.equals(500,lucia.costoDeUnaPresentacion(presentacionLunaPark))
	}
	
	test "Lucia cobra 400 por la presentacion en la Trastienda" {
		assert.equals(400,lucia.costoDeUnaPresentacion(presentacionLaTrastienda))
	}
	
	test "Luis Alberto cobra 1000 por la presentacion en el Luna Park" {
		assert.equals(1000,luisAlberto.costoDeUnaPresentacion(presentacionLunaPark))
	}
	
	test "Luis Alberto cobra 1200 por la presentacion en la trastienda" {
		assert.equals(1200,luisAlberto.costoDeUnaPresentacion(presentacionLaTrastienda))
	}
	
	test "El costo de la presentacion en el Luna Park es 1550" {
		assert.equals(1550, costoLucia + costoJoaquin + costoLuisAlberto)
	}
	
	test "El costo de la presentacion en la Trastienda es 1650" {
		assert.equals(1650, costoLuciaTrastienda + costoJoaquinTrastienda + costoLuisAlbertoTrastienda)
	}	
}
